<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Puneeth_HW11">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="classpath">
        <pathelement location="bin"/>
        <pathelement location="test/bin"/>
        <pathelement path="${env.JUNIT}"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <mkdir dir="test/bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="test/bin">
            <fileset dir="test/src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
        <delete dir="test/bin"/>
    </target>
    
    <target depends="clean, build-project, GenericObservableTest, RunGenericObservable" name="build"/>
    
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="test/bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="test/src"/>
            <classpath refid="classpath"/>
        </javac>
    </target>
    
    <target name="RunGenericObservable">
        <java classname="edu.umb.cs680.hw11.DJIAEvent" classpath="bin" failonerror="true" fork="yes"/>
        <java classname="edu.umb.cs680.hw11.DJIAQuoteObservable" classpath="bin" failonerror="true" fork="yes"/>
        <java classname="edu.umb.cs680.hw11.PiechartObserver" classpath="bin" failonerror="true" fork="yes"/>
        <java classname="edu.umb.cs680.hw11.StockEvent" classpath="bin" failonerror="true" fork="yes"/>
        <java classname="edu.umb.cs680.hw11.StockQuoteObservable" classpath="bin" failonerror="true" fork="yes"/>
        <java classname="edu.umb.cs680.hw11.TableObserver" classpath="bin" failonerror="true" fork="yes"/>
        <java classname="edu.umb.cs680.hw11.ThreeDObserver" classpath="bin" failonerror="true" fork="yes"/>
    </target>
    
    <target name="GenericObservableTest">
		<junitlauncher printSummary="yes">
			<classpath refid="classpath" />
			<testclasses outputdir="test">
				<fileset dir="test/bin">
					<include name="edu/umb/cs680/hw11/*Test.class" />
				</fileset>
				<listener type="legacy-plain" sendSysOut="true" />
			</testclasses>
		</junitlauncher>
	</target>
</project>
